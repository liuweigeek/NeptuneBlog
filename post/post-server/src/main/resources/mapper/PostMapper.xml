<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scott.neptune.postserver.mapper.PostMapper">

    <resultMap id="BaseResultMap" type="com.scott.neptune.postserver.entity.PostEntity">
        <id column="id" property="id"/>
        <result column="user_id" property="userId"/>
        <result column="content" property="content"/>
        <result column="device" property="device"/>
        <result column="create_date" property="createDate"/>
        <result column="update_date" property="updateDate"/>
        <association property="author" javaType="com.scott.neptune.userapi.dto.UserDto">
            <id column="uid" property="id"/>
            <result column="sex" property="sex"/>
            <result column="username" property="username"/>
            <result column="nickname" property="nickname"/>
            <result column="small_avatar" property="smallAvatar"/>
        </association>
    </resultMap>

    <sql id="Base_Column_List">
        id, user_id, content, device, create_date, update_date
    </sql>

    <!-- 判断指定条件的推文 -->
    <select id="findAll" parameterType="map"
            resultMap="BaseResultMap">
        select
        p.id, p.user_id, p.content, p.device, p.create_date, p.update_date,
        u.id uid, u.sex, u.username, u.nickname, ua.url small_avatar
        from t_user u
        left join t_post p on u.id = p.user_id
        left join t_user_avatar ua on ua.user_id = u.id and ua.size_type = 1
        where p.id is not null
        <if test="post != null">
            <if test="post.userId != null and post.userId != ''">
                and u.id = #{post.userId}
            </if>
            <if test="post.content != null and post.content != ''">
                and p.content like concat('%',#{post.content},'%')
            </if>
        </if>
        <if test="user != null">
            <if test="user.id != null and user.id != ''">
                and u.id = #{user.id}
            </if>
            <if test="user.username != null and user.username != ''">
                and u.username = #{user.username}
            </if>
        </if>
        order by p.create_date desc
    </select>

    <!-- 获取关注用户的推文 -->
    <select id="findAllOfFollowing" parameterType="com.scott.neptune.postserver.entity.PostEntity"
            resultMap="BaseResultMap">
        select
        p.id,
        p.user_id,
        p.content,
        p.device,
        p.create_date,
        p.update_date,
        p.user_id uid,
        a.sex,
        a.username,
        a.nickname,
        ua.url small_avatar
        from t_user u
        left join t_friend_relation fr on fr.from_id = u.id
        left join t_post p on (p.user_id = fr.to_id or p.user_id = u.id)
        left join t_user a on a.id = p.user_id
        left join t_user_avatar ua on ua.user_id = p.user_id and ua.size_type = 1
        where p.id is not null
        <if test="post != null">
            <if test="post.userId != null and post.userId != ''">
                and u.id = #{post.userId}
            </if>
            <if test="post.content != null and post.content != ''">
                and p.content like concat('%',#{post.content},'%')
            </if>
        </if>
        and u.id = #{fromId}
        order by p.create_date desc
    </select>

    <!-- 获取指定用户的推文 -->
    <select id="findAllInUserIds" parameterType="com.scott.neptune.postserver.entity.PostEntity"
            resultMap="BaseResultMap">
        select
        p.id, p.user_id, p.content, p.device, p.create_date, p.update_date,
        u.id uid, u.sex, u.username, u.nickname, ua.url small_avatar
        from t_user u
        left join t_post p on u.id = p.user_id
        left join t_user_avatar ua on ua.user_id = u.id and ua.size_type = 1
        where u.id in
        <foreach item="item" index="index" open="(" separator="," close=")" collection="userIdList">
            #{item}
        </foreach>
        and p.id is not null
        order by p.create_date desc
    </select>

    <!-- 判断指定条件的推文 -->
    <select id="findByKeyword" parameterType="string"
            resultMap="BaseResultMap">
        select p.id,
               p.user_id,
               p.content,
               p.device,
               p.create_date,
               p.update_date,
               u.id   uid,
               u.sex,
               u.username,
               u.nickname,
               ua.url small_avatar
        from t_post p
                 left join t_user u on p.user_id = u.id
                 left join t_user_avatar ua on ua.user_id = u.id and ua.size_type = 1
        where p.content like concat('%', #{keyword}, '%')
          and p.id is not null
        order by p.create_date desc
    </select>

</mapper>